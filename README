<!-- vim: syntax=Markdown -->
<!--
  Title: KISS for IRC (kirc)
  Description: A tiny IRC client written in POSIX C99.
  Author: mcpcpc
-->

<h3 align="center">
  <img src="https://raw.githubusercontent.com/mcpcpc/kirc/master/.github/kirc.png" alt="kirc" height="170px">
</h3>

<p align="center">KISS for IRC, a tiny IRC client written in POSIX C99.</p>

<p align="center">
  <a href="./LICENSE"><img src="https://img.shields.io/badge/license-MIT-blue.svg"></a>
  <a href="https://github.com/mcpcpc/kirc/releases"><img src="https://img.shields.io/github/v/release/mcpcpc/kirc.svg"></a>
  <a href="https://repology.org/metapackage/kirc"><img src="https://repology.org/badge/tiny-repos/kirc.svg" alt="Packaging status"></a>
  <a href="https://www.codacy.com/manual/mcpcpc/kirc/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=mcpcpc/kirc&amp;utm_campaign=Badge_Grade"><img src="https://app.codacy.com/project/badge/Grade/5616c0ed4b2f4209826038dbc270dbf5" alt="Codacy status"></a>
</p>

<p align="center">
  <img src=".github/tty.gif" width="550">
</p>

## Features

*   Excellent cross-platform compatibility.
*   Asynchronous user input and server messager handling.
*   No dependencies other than a C99 compiler.
*   Native SASL PLAIN and EXTERNAL authentication support.
*   TLS/SSL protocol capable (via external TLS utilities).
*   Full chat history logging.
*   Multi-channel joining at server connection.
*   Simple command aliases and full support for all RFC 2812 commands.
*   Easy color scheme definition via ANSI 8-bit colors.

## Installation & Usage

Building and installing on **KISS Linux** using the Community repository:

```shell
kiss b kirc
kiss i kirc
```

Building and installing on **Arch** and **Arch-based** distros using the AUR:

```shell
git clone https://aur.archlinux.org/kirc-git.git
cd kirc
makepkg -si
```

Building and installing from source (works on **Raspbian**, **Debian**, **Ubuntu** and many other Unix distributions):

```shell
git clone https://github.com/mcpcpc/kirc.git
cd kirc
make
make install
```

### Usage

Consult `man kirc` for a full list and explanation of available `kirc` arguments.

```shell
kirc [-s hostname] [-p port] [-c channels] [-n nickname] [-r realname] [-u username] [-k password] [-a token] [-x command] [-w nick_width] [-o logfile] [-e|v|V]
```

### Command Aliases

```shell
<message>                 Send a PRIVMSG to the current channel.
@<channel|nick> <message> Send a message to a specified channel or nick 
/<command>                Send command to IRC server (see RFC 2812 for full list).
/#<channel>               Assign new default message channel.
```

### User Input Key Bindings

*   **CTRL+B** or **LEFT ARROW** moves the cursor one character to the left.
*   **CTRL+F** or **RIGHT ARROW** moves the cursor one character to the right.
*   **CTRL+A** moves the cursor to the end of the line.
*   **CTRL+E** or **HOME** moves the cursor to the start of the line.
*   **CTRL+W** deletes the previous word.
*   **CTRL+U** deletes the entire line.
*   **CTRL+K** deletes the from current character to end of line.
*   **CTRL+C** Force quit kirc

## Support Documentation

Please refer to the official [Support Documention](https://mcpcpc.github.io/kirc/documentation.html) for examples, troubleshooting and use cases.

## Contact

For any further questions or concerns, feel free to reach out to me, [mcpcpc](https://github.com/mcpcpc), on `#kirc`
or `#kisslinux` Freenode IRC channels.
